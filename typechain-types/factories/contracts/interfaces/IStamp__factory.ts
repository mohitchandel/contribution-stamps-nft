/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Contract, Interface, type ContractRunner } from "ethers";
import type {
  IStamp,
  IStampInterface,
} from "../../../contracts/interfaces/IStamp";

const _abi = [
  {
    inputs: [
      {
        components: [
          {
            internalType: "bool",
            name: "contributed",
            type: "bool",
          },
          {
            internalType: "uint120",
            name: "repos",
            type: "uint120",
          },
          {
            internalType: "string",
            name: "username",
            type: "string",
          },
        ],
        internalType: "struct ClaimRequest",
        name: "claimRequest",
        type: "tuple",
      },
    ],
    name: "verifyContribution",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

export class IStamp__factory {
  static readonly abi = _abi;
  static createInterface(): IStampInterface {
    return new Interface(_abi) as IStampInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): IStamp {
    return new Contract(address, _abi, runner) as unknown as IStamp;
  }
}
